{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const getAllItemsStart = () => {\n  return {\n    type: actionTypes.GET_ALL_ITEMS_START\n  };\n};\nexport const getlol = items => {\n  console.log(items); // for(let i=0; i<items.length;i++){\n  //    console.log(items[i])\n  // }\n};\nexport const getArray = pop => async dispatch => {\n  console.log(pop);\n  return {\n    type: actionTypes.GET_ARRAY // items\n\n  };\n};\nexport const getAllItemsSuccess = items => {\n  return {\n    type: actionTypes.GET_ALL_ITEMS_SUCCESS,\n    items: items\n  };\n};\nexport const getAllItemsFail = error => {\n  return {\n    type: actionTypes.GET_ALL_ITEMS_FAIL,\n    error: error\n  };\n};\nexport const getAllItems = () => {\n  return dispatch => {\n    let arr = [];\n    axios.get(\"http://127.0.0.1:8000/api/products/\").then(res => {\n      console.log(\"res.data\");\n      console.log(res.data);\n    });\n  };\n};\nexport const getItemsStart = start => {\n  console.log(start);\n  return {\n    type: actionTypes.GET_ITEMS_START\n  };\n};\nexport const getItemsSuccess = items => {\n  return {\n    type: actionTypes.GET_ITEMS_SUCCESS\n  };\n};\nexport const getItemsFail = error => {\n  return {\n    type: actionTypes.GET_ITEMS_FAIL,\n    error: error\n  };\n};\nexport const getItems = () => async dispatch => {\n  let xd;\n  dispatch(getItemsStart());\n  await axios.get(\"http://127.0.0.1:8000/api/products/\").then(res => {\n    xd = res.data;\n    const items = res.data;\n    console.log(items);\n    let proba = {\n      name: \"John\",\n      age: 31,\n      city: \"New York\"\n    };\n    let users = [{\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }, {\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }, {\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }, {\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }];\n    console.log(users);\n    let pop = [];\n\n    for (let i = 0; i < items.length; i++) {\n      let url = items[i].url;\n      axios.get(url).then(res => {\n        let length = res.data.children.length;\n\n        if (length > 0) {\n          console.log(items[i]);\n          pop.push(proba);\n        }\n      });\n    }\n\n    dispatch(getItemsSuccess());\n    return pop;\n  });\n  dispatch(getArray(xd)); // dispatch(getlol(xd))\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/Michal/django-react-boilerplate/src/store/actions/items.js"],"names":["axios","actionTypes","getAllItemsStart","type","GET_ALL_ITEMS_START","getlol","items","console","log","getArray","pop","dispatch","GET_ARRAY","getAllItemsSuccess","GET_ALL_ITEMS_SUCCESS","getAllItemsFail","error","GET_ALL_ITEMS_FAIL","getAllItems","arr","get","then","res","data","getItemsStart","start","GET_ITEMS_START","getItemsSuccess","GET_ITEMS_SUCCESS","getItemsFail","GET_ITEMS_FAIL","getItems","xd","proba","name","age","city","users","i","length","url","children","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\nexport const getAllItemsStart = () =>{\r\n  return {\r\n    type: actionTypes.GET_ALL_ITEMS_START\r\n  };\r\n}\r\nexport const getlol = (items)=>{\r\n  console.log(items)\r\n  // for(let i=0; i<items.length;i++){\r\n  //    console.log(items[i])\r\n  // }\r\n}\r\nexport const getArray = (pop) => async(dispatch)=>{\r\n  console.log(pop) \r\n\r\n  return{\r\n    type: actionTypes.GET_ARRAY,\r\n    // items\r\n  }\r\n}\r\nexport const getAllItemsSuccess = (items) => {\r\n  return {\r\n    type: actionTypes.GET_ALL_ITEMS_SUCCESS,\r\n    items: items\r\n  };\r\n};\r\nexport const getAllItemsFail = error => {\r\n  return {\r\n    type: actionTypes.GET_ALL_ITEMS_FAIL,\r\n    error: error\r\n  };\r\n};  \r\nexport const getAllItems = () => {\r\n  return dispatch => {\r\n      \r\n      let arr = []\r\n      axios.get(\"http://127.0.0.1:8000/api/products/\").then(\r\n        res=>{\r\n          console.log(\"res.data\")\r\n          console.log(res.data)\r\n        \r\n      }\r\n      )\r\n\r\n      \r\n      \r\n      \r\n  };\r\n};\r\nexport const getItemsStart = (start) => {\r\n    console.log(start)\r\n    return {\r\n      type: actionTypes.GET_ITEMS_START\r\n    };\r\n  };\r\nexport const getItemsSuccess = (items) => {\r\n    return {\r\n      type: actionTypes.GET_ITEMS_SUCCESS,\r\n      \r\n    };\r\n  };\r\nexport const getItemsFail = error => {\r\n    return {\r\n      type: actionTypes.GET_ITEMS_FAIL,\r\n      error: error\r\n    };\r\n  };  \r\nexport const getItems = () => async(dispatch) => \r\n{\r\n      let xd \r\n      \r\n      dispatch(getItemsStart());\r\n      await axios.get(\"http://127.0.0.1:8000/api/products/\")\r\n        .then(res => {\r\n            xd = res.data\r\n            const items= res.data\r\n            console.log(items)\r\n            let proba = {name: \"John\", age: 31, city: \"New York\"}\r\n            \r\n            let users = [\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              },\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              },\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              },\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              }\r\n            ]\r\n            console.log(users) \r\n            let pop = []  \r\n            for(let i=0; i<items.length;i++){\r\n              \r\n              let url= items[i].url\r\n              axios.get(url).then(res =>\r\n                { \r\n                  let length = res.data.children.length\r\n                  if(length > 0){\r\n                    console.log(items[i])\r\n                    pop.push(proba) \r\n                  }\r\n                }\r\n              )\r\n            }\r\n            dispatch(getItemsSuccess())\r\n            return pop\r\n            \r\n          }\r\n        )\r\n        dispatch(getArray(xd));\r\n        // dispatch(getlol(xd))\r\n        \r\n        \r\n    ;\r\n    \r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}