{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const getAllItemsStart = () => {\n  return {\n    type: actionTypes.GET_ALL_ITEMS_START\n  };\n};\nexport const getArray = items => {\n  console.log(items);\n  return {\n    type: actionTypes.GET_ARRAY,\n    items\n  };\n};\nexport const getAllItemsSuccess = items => {\n  return {\n    type: actionTypes.GET_ALL_ITEMS_SUCCESS,\n    items: items\n  };\n};\nexport const getAllItemsFail = error => {\n  return {\n    type: actionTypes.GET_ALL_ITEMS_FAIL,\n    error: error\n  };\n};\nexport const getAllItems = () => {\n  return dispatch => {\n    let arr = [];\n    axios.get(\"http://127.0.0.1:8000/api/products/\").then(res => {\n      console.log(\"res.data\");\n      console.log(res.data); //   for(let i=0;i<res.data.length;i++){\n      //     let url =res.data[i].url\n      //     axios.get(url).then(res =>{\n      //     arr.push(res.data)\n      //   })\n      // }\n    });\n  };\n};\nexport const getItemsStart = () => {\n  return {\n    type: actionTypes.GET_ITEMS_START\n  };\n};\nexport const getItemsSuccess = items => {\n  return {\n    type: actionTypes.GET_ITEMS_SUCCESS\n  };\n};\nexport const getItemsFail = error => {\n  return {\n    type: actionTypes.GET_ITEMS_FAIL,\n    error: error\n  };\n};\nexport const getItems = () => async dispatch => {\n  dispatch(getItemsStart());\n  axios.get(\"http://127.0.0.1:8000/api/products/\").then(res => {\n    const items = res.data;\n    console.log(items);\n    let proba = {\n      name: \"John\",\n      age: 31,\n      city: \"New York\"\n    };\n    let users = [{\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }, {\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }, {\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }, {\n      \"name\": \"John\",\n      \"age\": 31,\n      \"city\": \"New York\"\n    }];\n    console.log(users); // Ręczne utworzenie\n\n    let pop = []; // Utworzenie tablicy\n\n    for (let i = 0; i < items.length; i++) {\n      console.log(\"ITEMy\");\n      console.log(items[i]);\n      let url = items[i].url;\n      axios.get(url).then(res => {\n        let length = res.data.children.length;\n\n        if (length > 0) {\n          console.log(items[i]);\n          pop.push(proba); // Dodanie rekordów do tablicy \n        }\n      });\n    }\n\n    dispatch(getArray(items));\n    dispatch(getItemsSuccess(items));\n    dispatch(getAllItems(items));\n  }).catch(err => {//   dispatch(getItemsFail());\n  });\n  dispatch(getItemsSuccess(items));\n  dispatch(getAllItems(items));\n};","map":{"version":3,"sources":["C:/Users/Michal/django-react-boilerplate/src/store/actions/items.js"],"names":["axios","actionTypes","getAllItemsStart","type","GET_ALL_ITEMS_START","getArray","items","console","log","GET_ARRAY","getAllItemsSuccess","GET_ALL_ITEMS_SUCCESS","getAllItemsFail","error","GET_ALL_ITEMS_FAIL","getAllItems","dispatch","arr","get","then","res","data","getItemsStart","GET_ITEMS_START","getItemsSuccess","GET_ITEMS_SUCCESS","getItemsFail","GET_ITEMS_FAIL","getItems","proba","name","age","city","users","pop","i","length","url","children","push","catch","err"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\nexport const getAllItemsStart = () =>{\r\n  return {\r\n    type: actionTypes.GET_ALL_ITEMS_START\r\n  };\r\n}\r\nexport const getArray = (items) =>{\r\n  console.log(items) \r\n  return{\r\n    type: actionTypes.GET_ARRAY,\r\n    items\r\n  }\r\n}\r\nexport const getAllItemsSuccess = (items) => {\r\n  return {\r\n    type: actionTypes.GET_ALL_ITEMS_SUCCESS,\r\n    items: items\r\n  };\r\n};\r\nexport const getAllItemsFail = error => {\r\n  return {\r\n    type: actionTypes.GET_ALL_ITEMS_FAIL,\r\n    error: error\r\n  };\r\n};  \r\nexport const getAllItems = () => {\r\n  return dispatch => {\r\n      \r\n      let arr = []\r\n      axios.get(\"http://127.0.0.1:8000/api/products/\").then(\r\n        res=>{\r\n          console.log(\"res.data\")\r\n          console.log(res.data)\r\n        //   for(let i=0;i<res.data.length;i++){\r\n        //     let url =res.data[i].url\r\n        //     axios.get(url).then(res =>{\r\n        //     arr.push(res.data)\r\n        //   })\r\n        \r\n        // }\r\n      }\r\n      )\r\n\r\n      \r\n      \r\n      \r\n  };\r\n};\r\nexport const getItemsStart = () => {\r\n    return {\r\n      type: actionTypes.GET_ITEMS_START\r\n    };\r\n  };\r\nexport const getItemsSuccess = (items) => {\r\n    return {\r\n      type: actionTypes.GET_ITEMS_SUCCESS,\r\n      \r\n    };\r\n  };\r\nexport const getItemsFail = error => {\r\n    return {\r\n      type: actionTypes.GET_ITEMS_FAIL,\r\n      error: error\r\n    };\r\n  };  \r\nexport const getItems = () => async(dispatch) => \r\n{\r\n      dispatch(getItemsStart());\r\n      axios.get(\"http://127.0.0.1:8000/api/products/\")\r\n        .then(res => {\r\n            const items= res.data\r\n            console.log(items)\r\n            let proba = {name: \"John\", age: 31, city: \"New York\"}\r\n            \r\n            let users = [\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              },\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              },\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              },\r\n              {\r\n                \"name\": \"John\",\r\n                \"age\": 31,\r\n                \"city\": \"New York\"\r\n              }\r\n            ]\r\n            console.log(users) // Ręczne utworzenie\r\n            let pop = []  // Utworzenie tablicy\r\n            for(let i=0; i<items.length;i++){\r\n              console.log(\"ITEMy\")\r\n              console.log(items[i])\r\n              let url= items[i].url\r\n              axios.get(url).then(res =>\r\n                { \r\n                  let length = res.data.children.length\r\n                  if(length > 0){\r\n                    console.log(items[i])\r\n                    pop.push(proba) // Dodanie rekordów do tablicy \r\n                  }\r\n                }\r\n              )\r\n            }\r\n            \r\n            dispatch(getArray(items));\r\n            dispatch(getItemsSuccess(items));\r\n            dispatch(getAllItems(items))\r\n        }\r\n        \r\n        )\r\n        .catch(err => {\r\n        //   dispatch(getItemsFail());\r\n        });\r\n        dispatch(getItemsSuccess(items));\r\n        dispatch(getAllItems(items))\r\n    ;\r\n    \r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}