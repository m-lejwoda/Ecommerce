{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user: user,\n    userId: action.data.user\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n      const user = {\n        token: res.data.key,\n        userId: res.data.user,\n        username,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const user = {\n        token: res.data.key,\n        userId: res.data.user,\n        username,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Michal/django-react-boilerplate/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","user","AUTH_SUCCESS","userId","action","data","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","console","log","token","key","expirationDate","Date","getTime","setItem","JSON","stringify","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = user => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    user: user,\r\n    userId: action.data.user,\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data)\r\n        const user = {\r\n          token: res.data.key,\r\n          userId: res.data.user,\r\n          username,\r\n          expirationDate : new Date(new Date().getTime() + 3600 * 1000)\r\n        }\r\n        localStorage.setItem(\"user\",JSON.stringify(user));\r\n        dispatch(authSuccess(user));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\r\n        username: username,\r\n        email: email,\r\n        password1: password1,\r\n        password2: password2\r\n      })\r\n      .then(res => {\r\n        const user = {\r\n          token: res.data.key,\r\n          userId: res.data.user,\r\n          username,\r\n          expirationDate : new Date(new Date().getTime() + 3600 * 1000)\r\n        }\r\n        dispatch(authSuccess(token));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(token));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}